//【题目描述】
//有M（1 000以内）个猴子围成一圈，每个猴子有一个编号，编号从1到M，打算从中选出一个大王。
//经过协商。 决定选大王的规则如下：从第1个猴子开始，每隔N（任意正整数）个，数到的猴子出圈，
//最后剩下来的就是大王。要求从键盘输入M、N（均为正整数），试编程计算编号为多少的猴子将成为大王。
//要求：
//1、 变量m表示猴子的个数；变量n表示出圈基数。
//2、数数规则：每次从1数到n，当前为n的猴子出圈，若有3个猴子，n为2，猴子编号：1, 2, 3，
//出圈猴子的序号：2，1，猴子大王的序号为3。
//【输入格式】
//一行两个数 m 和 n
//【输出格式】
//一行输出猴子大王的编号
//【输入输出样例】
//屏幕输出 input m :
//用户输入 3
//屏幕输出 input n :
//用户输入 2
//屏幕输出 king :
//屏幕输出 3
//1 猴子活 ； 0 猴子死
#include <iostream>
using namespace std;
int main()
{
	int m, n;//m代表猴子的综素，n代表每次数的位数
	cout << "input m: " ; cin >> m;
	int* arr = new int[m];//创建动态数组
	for (int i = 0; i < m; i++)
	{
		arr[i] = 1;
	}
	//for (int i = 0; i < m; i++)//检验动态数组是否赋值成功
	//{
	//	cout << arr[i] << " ";
	//}
	cout << "input n: " ; cin >> n; int a = 0, b = 0, d = 0;//a为累加器，代表当前猴子的编号
	//b为计数器，代表当前数到的位数；d为累加器，代表死亡猴子的总数
	do {
		++a;//逐个枚举圈中的元素
		if (a > m) a = 1;//数组模拟环状，第一个与最后一个相连
		if (arr[a - 1])  b++;
		if (b == n)
		{
			b = 0;
			arr[a - 1] = 0;
			d++;
		}
		if (d == m) cout << "king: "<<a << endl;
	} while (d != m);
}